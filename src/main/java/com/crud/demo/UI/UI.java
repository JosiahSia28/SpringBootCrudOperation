/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.crud.demo.UI;

import com.crud.demo.DemoApplication;
import com.crud.demo.backend.Backend;
import com.crud.demo.dao.StudentDAO;
import com.crud.demo.entity.Student;
import java.awt.Image;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Josiah
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    
    public UI() {
    initComponents();  // Initializes all the Swing components
    ImageIcon icon = new ImageIcon(getClass().getResource("/image/spring.png"));
    this.setIconImage(icon.getImage());


    loadStudentsToTable();   
    student_table.getSelectionModel().addListSelectionListener(event -> {
    // Ignore extra events
    if (!event.getValueIsAdjusting() && student_table.getSelectedRow() != -1) {
        int selectedRow = student_table.getSelectedRow();
        // Assuming your table model columns: ID, First Name, Last Name, Email
        student_id_txt.setText(student_table.getValueAt(selectedRow, 0).toString()); // ID
        first_name_txt.setText(student_table.getValueAt(selectedRow, 1).toString()); // First Name
        last_name_txt.setText(student_table.getValueAt(selectedRow, 2).toString()); // Last Name
        email_txt.setText(student_table.getValueAt(selectedRow, 3).toString()); // Email
    }
});
// Load data from the database into the JTable
}
     private StudentDAO studentDAO;
     public UI(StudentDAO studentDAO) {
    this.studentDAO = studentDAO;
    initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        student_id_txt = new javax.swing.JTextField();
        first_name_txt = new javax.swing.JTextField();
        last_name_txt = new javax.swing.JTextField();
        email_txt = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        table = new javax.swing.JScrollPane();
        student_table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("STUDENT CRUD ");
        setIconImages(null);

        titleLabel.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        titleLabel.setText("STUDENT INFORMATION");

        idLabel.setText("ID :");

        jLabel1.setText("FIRST NAME:");

        jLabel2.setText("LAST NAME:");

        jLabel3.setText("EMAIL:");

        student_id_txt.setEditable(false);

        btnCreate.setText("ADD");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        student_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "FIRST NAME", "LAST NAME", "EMAIL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        student_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                student_tableMouseClicked(evt);
            }
        });
        table.setViewportView(student_table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleLabel)
                .addGap(58, 58, 58))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(table, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(student_id_txt))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(last_name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(first_name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(email_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(student_id_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(first_name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(last_name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(email_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(table, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   

private void loadStudentsToTable() {
    Backend backendService = DemoApplication.getContext().getBean(Backend.class);
    List<Student> students = backendService.getAllStudents();
    
    DefaultTableModel model = (DefaultTableModel) student_table.getModel();
    
    // Clear existing rows
    model.setRowCount(0);
    
    // Add column names
    model.setColumnIdentifiers(new Object[]{"student_id", "first_name", "last_name", "email"});
    
    // Add each student to the table
    for (Student s : students) {
        model.addRow(new Object[]{
            s.getStudent_id(),
            s.getFirstname(),
            s.getLastname(),
            s.getEmail()
        });
    }
}


    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
    String firstName = first_name_txt.getText();
    String lastName = last_name_txt.getText();
    String email = email_txt.getText();

    // Call Spring backend service
    Backend backendService = DemoApplication.getContext().getBean(Backend.class);
    backendService.createStudent(firstName, lastName, email);
    
    JOptionPane.showMessageDialog(rootPane, "SAVED");
    first_name_txt.setText("");
    last_name_txt.setText("");
    email_txt.setText("");
    loadStudentsToTable();

    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
          if (student_id_txt.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please select a student to delete.");
        return;
    }

    int id = Integer.parseInt(student_id_txt.getText());
    Backend backendService = DemoApplication.getContext().getBean(Backend.class);

    backendService.deleteStudent(id); // Use backend, not studentDAO

    JOptionPane.showMessageDialog(this, "Student deleted successfully.");

    loadStudentsToTable(); // Refresh table
    student_id_txt.setText("");
    first_name_txt.setText("");
    last_name_txt.setText("");
    email_txt.setText("");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
       try {
        int id = Integer.parseInt(student_id_txt.getText());
        Backend backendService = DemoApplication.getContext().getBean(Backend.class);
Student existingStudent = backendService.getAllStudents().stream()
        .filter(s -> s.getStudent_id() == id)
        .findFirst()
        .orElse(null);

if (existingStudent != null) {
    if (!first_name_txt.getText().isEmpty()) {
        existingStudent.setFirstname(first_name_txt.getText());
    }
    if (!last_name_txt.getText().isEmpty()) {
        existingStudent.setLastname(last_name_txt.getText());
    }
    if (!email_txt.getText().isEmpty()) {
        existingStudent.setEmail(email_txt.getText());
    }

    backendService.update(existingStudent); // <- transactional service call
    loadStudentsToTable();
    JOptionPane.showMessageDialog(rootPane, "Updated Successfully");
}
       }catch(Exception e){
           System.out.println("failed");
       }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void student_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_student_tableMouseClicked
        try{
            int row = student_table.getSelectedRow();
            String tableClick = student_table.getModel().getValueAt(row,0).toString();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_student_tableMouseClicked
  
 



    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextField email_txt;
    private javax.swing.JTextField first_name_txt;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField last_name_txt;
    private javax.swing.JTextField student_id_txt;
    private javax.swing.JTable student_table;
    private javax.swing.JScrollPane table;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
